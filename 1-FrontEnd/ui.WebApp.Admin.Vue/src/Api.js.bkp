/*
import Swagger from "swagger-client";
import _ from "lodash";

export default class Api {
  constructor(url) {
    this.url = url;
    this.client = null;
    this.token = null;

    this.errorHandlers = {
      401: null,
      404: null,
      500: null,
      502: null
    };
  }

  setToken(token) {
    this.token = token;
    this.client = null;
  }

  setErrorHandler(handler, statusCode) {
    this.errorHandlers[statusCode] = handler;
  }

  _callApi(options) {
    const operationId = `${options.method}${options.module}`;

    this.client
      .execute({
        operationId,
        parameters: options.parameters,
        requestInterceptor: req => {
          if (this.token) {
            req.headers["Authorization"] = `Bearer ${this.token}`;
          }

          req.headers["Content-Type"] = "application/json";

          if (req.method === "POST") {
            req.body = {
              companyName: "44",
              fantasyName: "44",
              corporateNumber: "44",
              createdBy: "44"
            };
          }

          console.log("req", req);
          return req;
        }
      })
      .then(response => {
        console.log("sucesso");
        let data = null;

        if (response.body !== undefined) data = response.body;
        else if (_.isArray(response.data) && response.data.length > 0)
          data = JSON.parse(response.data);

        options.success(data);
      })
      .catch(err => {
        console.log("erro", err);

        let response = err.response || {};
        let json = response.body;

        if (this.errorHandlers[err.status])
          this.errorHandlers[err.status](json);

        options.error(json, err.response.status);
      });
  }

  _fetchApi(options) {
    let url = "https://localhost:5001/" + options.module;
    console.log(url);

    var myHeaders = new Headers();
    myHeaders.append("Accept", "application/json");
    myHeaders.append("Content-Type", "application/json");

    var myInit = {
      method: options.method,
      headers: myHeaders,
      mode: "cors",
      cache: "default",
      body: JSON.stringify(options.parameters)
    };

    fetch(url, myInit)
      .then(response => response.json())
      .then(data => {
        console.log(data);
        options.success(data);
        return data;
      })
      .catch(error => console.error(error));
  }

  call(options) {
    if (!options.success) {
      options.success = () => {};
    }

    if (!options.error) {
      options.error = () => {};
    }

    if (this.client) {
      this._fetchApi(options);
    } else {
      console.log("this.url:", this.url);
      Swagger(this.url).then(_client => {
        console.log("Swagger _client:", _client);
        this.client = _client;
        this._fetchApi(options);
      });
    }
  }
}
*/